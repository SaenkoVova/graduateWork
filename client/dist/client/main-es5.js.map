{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/carousel-holder/carousel-holder.component.ts","webpack:///src/app/carousel-holder/carousel-holder.component.html","webpack:///src/app/case-view/case-view.component.ts","webpack:///src/app/case-view/case-view.component.html","webpack:///src/app/cases-table/cases-table-datasource.ts","webpack:///src/app/cases-table/cases-table.component.ts","webpack:///src/app/cases-table/cases-table.component.html","webpack:///src/app/directives/show-authed.directive.ts","webpack:///src/app/fond-details/fond-details.component.ts","webpack:///src/app/fond-details/fond-details.component.html","webpack:///src/app/fonds-list/fonds-list.component.ts","webpack:///src/app/fonds-list/fonds-list.component.html","webpack:///src/app/fonds/fonds.component.ts","webpack:///src/app/fonds/fonds.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/services-list/services-list.component.ts","webpack:///src/app/services-list/services-list.component.html","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/background-mode.service.ts","webpack:///src/app/services/case.service.ts","webpack:///src/app/services/fonds.service.ts","webpack:///src/app/services/jwt.service.ts","webpack:///src/app/services/ng-progress.service.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///zlib (ignored)","webpack:///fs (ignored)","webpack:///http (ignored)","webpack:///https (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","auth","appMode","populate","getCurrentMode","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthComponent","fb","authService","router","backgroundMode","addressForm","group","email","required","password","isSubmit","error","currentMode","subscribe","data","nightMode","credentials","get","value","attemptAuth","navigateByUrl","err","message","onSubmit","CarouselHolderComponent","items","title","text","customOptions","loop","mouseDrag","touchDrag","pullDrag","dots","autoplay","navSpeed","navText","responsive","nav","CaseViewComponent","pdfSrc","EXAMPLE_DATA","CasesTableDataSource","cases","dataMutations","paginator","page","sort","sortChange","pipe","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","CasesTableComponent","caseService","ngProgressService","displayedColumns","fonds","getFonds","ngProgressComplete","ngProgressStart","getCases","dataSource","array","table","length","event","console","log","togglePage","ShowAuthedDirective","viewContainer","templateRef","isAuthenticated","condition","createEmbeddedView","clear","FondDetailsComponent","breakpointObserver","cards","observe","Handset","matches","cols","rows","icon","FondsListComponent","FondsComponent","fondsService","HomeComponent","NavComponent","backgroundModeService","isHandset$","result","getCurrentUser","purgeAuth","toggleMode","currentUser","userData","ProfileComponent","getCurrentUserData","ServicesListComponent","ApiService","http","params","api_url","formatErrors","body","put","JSON","stringify","httpOptions","headers","post","providedIn","AuthService","jwtService","apiService","currentUserSubject","asObservable","isAuthenticatedSubject","token","getToken","setAuth","user","saveToken","next","destroyToken","type","route","BackgroundModeService","currentModeSubject","window","localStorage","CaseService","FondsService","JwtService","jwtToken","removeItem","NgProgressService","ngProgress","progressRef","ref","start","complete","SignupComponent","firstName","secondName","confirm","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {FondsComponent} from './fonds/fonds.component';\nimport {FondDetailsComponent} from './fond-details/fond-details.component';\nimport {CaseViewComponent} from './case-view/case-view.component';\nimport {AuthComponent} from './auth/auth.component';\nimport {SignupComponent} from './signup/signup.component';\nimport {ProfileComponent} from './profile/profile.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'fonds', component: FondsComponent},\n  { path: 'fonds/:id', component: FondDetailsComponent},\n  { path: 'fonds/:id/case/:caseId', component: CaseViewComponent},\n  { path: 'auth', component: AuthComponent},\n  { path: 'signup', component: SignupComponent },\n  { path: 'profile', component: ProfileComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from './services/auth.service';\nimport {BackgroundModeService} from './services/background-mode.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private auth: AuthService,\n    private appMode: BackgroundModeService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.auth.populate();\n    this.appMode.getCurrentMode();\n  }\n}\n","<ng-progress [color]=\"'#FF008B'\"\n             [thick]=\"true\"\n             [trickleSpeed]=\"500\"\n             [spinner]=\"false\"></ng-progress>\n<app-nav></app-nav>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { CarouselModule } from 'ngx-owl-carousel-o';\nimport {CarouselHolderComponent} from './carousel-holder/carousel-holder.component';\nimport { HomeComponent } from './home/home.component';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { ServicesListComponent } from './services-list/services-list.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FondsComponent } from './fonds/fonds.component';\nimport { FondsListComponent } from './fonds-list/fonds-list.component';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { FondDetailsComponent } from './fond-details/fond-details.component';\nimport { CasesTableComponent } from './cases-table/cases-table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport {NgProgressModule} from 'ngx-progressbar';\nimport {FondsService} from './services/fonds.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport { CaseViewComponent } from './case-view/case-view.component';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\nimport { AuthComponent } from './auth/auth.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SignupComponent } from './signup/signup.component';\nimport { ShowAuthedDirective } from './directives/show-authed.directive';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    CarouselHolderComponent,\n    HomeComponent,\n    ServicesListComponent,\n    FondsComponent,\n    FondsListComponent,\n    FondDetailsComponent,\n    CasesTableComponent,\n    CaseViewComponent,\n    AuthComponent,\n    SignupComponent,\n    ShowAuthedDirective,\n    ProfileComponent,\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        LayoutModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        CarouselModule,\n        MatGridListModule,\n        MatCardModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatTableModule,\n        MatSortModule,\n        NgProgressModule,\n        HttpClientModule,\n        PdfViewerModule,\n        MatInputModule,\n        MatSelectModule,\n        MatRadioModule,\n        ReactiveFormsModule\n    ],\n  providers: [FondsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {AuthService} from '../services/auth.service';\nimport {Error} from '../models/Error';\nimport {Router} from '@angular/router';\nimport {BackgroundModeService} from '../services/background-mode.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  addressForm = this.fb.group({\n    email: [null, [Validators.required, Validators.email]],\n    password: [null, [Validators.required]]\n  });\n\n  isSubmit = false;\n  error = null;\n  nightMode: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private backgroundMode: BackgroundModeService\n  ) {}\n\n  ngOnInit(): void {\n    this.backgroundMode.currentMode.subscribe(\n      (data) => this.nightMode = data\n    );\n  }\n\n  onSubmit() {\n    this.isSubmit = true;\n    this.error = null;\n    const credentials = {\n      email: this.addressForm.get('email').value,\n      password: this.addressForm.get('password').value\n    };\n    this.authService.attemptAuth('signin', credentials)\n      .subscribe(\n        data => {\n          this.router.navigateByUrl('/');\n        },\n        err => {\n          this.error = err.message;\n          this.isSubmit = false;\n        }\n      );\n  }\n}\n","<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\" [class.night]=\"nightMode\">\n  <mat-card class=\"shipping-card\">\n    <mat-card-header>\n      <mat-card-title>Вхід</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Email\" formControlName=\"email\">\n            <mat-error *ngIf=\"addressForm.controls['email'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput type=\"password\" placeholder=\"Пароль\"  formControlName=\"password\">\n            <mat-error *ngIf=\"addressForm.controls['password'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"error\">\n        <div class=\"col\">\n          <div class=\"mat-error\">\n            {{error}}\n          </div>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"isSubmit\" >Увійти</button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {OwlOptions} from 'ngx-owl-carousel-o';\n\n@Component({\n  selector: 'app-carousel-holder',\n  templateUrl: './carousel-holder.component.html',\n  styleUrls: ['./carousel-holder.component.scss']\n})\nexport class CarouselHolderComponent implements OnInit {\n\n  items = [\n    {\n      title: 'Title 1',\n      text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Consequat mauris nunc congue nisi vitae suscipit tellus mauris a.'\n    },\n    {\n      title: 'Title 2',\n      text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Consequat mauris nunc congue nisi vitae suscipit tellus mauris a.'\n    }\n  ];\n\n  constructor() { }\n\n  customOptions: OwlOptions = {\n    loop: true,\n    mouseDrag: true,\n    touchDrag: false,\n    pullDrag: false,\n    dots: true,\n    autoplay: true,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1\n      },\n      400: {\n        items: 2\n      },\n      740: {\n        items: 3\n      },\n      1080: {\n        items: 1\n      }\n    },\n    nav: false\n  };\n\n  ngOnInit(): void {\n  }\n\n}\n","<owl-carousel-o [options]=\"customOptions\">\n  <ng-template carouselSlide *ngFor=\"let item of items\">\n    <div class=\"slide\">\n     <div class=\"slide-mask\">\n       <h1>{{item.title}}</h1>\n       <hr>\n       <article>\n         {{item.text}}\n       </article>\n     </div>\n     </div>\n  </ng-template>\n</owl-carousel-o>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-case-view',\n  templateUrl: './case-view.component.html',\n  styleUrls: ['./case-view.component.scss']\n})\nexport class CaseViewComponent implements OnInit {\n\n  pdfSrc = 'https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pdf-viewer [src]=\"pdfSrc\"\r\n            [render-text]=\"true\"\r\n            style=\"display: block;\"\r\n></pdf-viewer>\r\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface CasesTableItem {\n  case_index: number;\n  id: number;\n  title: string;\n  startDate: string;\n  endDate: string;\n  page_quantity: number;\n  notes: string;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: CasesTableItem[] = [\n  // {id: 1, case_index: 1, title: 'Опис 1', dates: '1999-2000', page_quantity: 100, notes: 'Примітки'}\n];\n\n/**\n * Data source for the CasesTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class CasesTableDataSource extends DataSource<CasesTableItem> {\n  data: CasesTableItem[];\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor(private cases) {\n    super();\n    this.data = cases;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<CasesTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: CasesTableItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: CasesTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.title, b.title, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { CasesTableDataSource, CasesTableItem } from './cases-table-datasource';\nimport {CaseService} from '../services/case.service';\nimport {NgProgressService} from '../services/ng-progress.service';\n\n@Component({\n  selector: 'app-cases-table',\n  templateUrl: './cases-table.component.html',\n  styleUrls: ['./cases-table.component.scss']\n})\nexport class CasesTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<CasesTableItem>;\n  dataSource: CasesTableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'case_index', 'title', 'dates', 'page_quantity', 'notes'];\n  fonds = [];\n  length;\n  pageSize = 10;\n  pageIndex = 0;\n  pageEvent: PageEvent;\n\n  constructor(\n    private caseService: CaseService,\n    private ngProgressService: NgProgressService\n  ) {\n  }\n\n  ngOnInit() {\n    this.getFonds(this.pageSize, this.pageIndex);\n  }\n\n  getFonds(pageSize, pageIndex) {\n    this.ngProgressService.ngProgressComplete();\n    this.ngProgressService.ngProgressStart();\n    this.caseService.getCases(pageSize, pageIndex)\n      .subscribe(data => {\n        this.dataSource = new CasesTableDataSource(data.array);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        this.table.dataSource = this.dataSource;\n        this.length = data.length;\n        this.ngProgressService.ngProgressComplete();\n      });\n  }\n  togglePage(event): PageEvent {\n    this.dataSource = null;\n    this.getFonds(event.pageSize, event.pageIndex);\n    console.log(event);\n    return;\n  }\n\n  ngAfterViewInit(): void {\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>№</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.caseNumber}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"case_index\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Індекс справи</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.caseIndex}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Заголовок справи</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.caseTitle}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"dates\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Крайні дати документів</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.startDate |date}} - {{row.endDate | date}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"page_quantity\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Кількість аркушів у справі</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.pageQuantity}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"notes\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Примітки</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.notes}}\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" class=\"last-cell\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"'case/' + row._id\">\n            <span>Переглянути PDF</span>\n          </button>\n          <button mat-menu-item>\n            <span>Додати до закладок</span>\n          </button>\n        </mat-menu>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"length\"\n      [pageIndex]=\"pageIndex\"\n      [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"[25, 50, 100, 250]\"\n       (page)=\"pageEvent = togglePage($event)\" class=\"paginator\">\n  </mat-paginator>\n</div>\n","import {Directive, Input, OnInit, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {AuthService} from '../services/auth.service';\n\n@Directive({\n  selector: '[appShowAuthed]'\n})\nexport class ShowAuthedDirective implements OnInit {\n\n  constructor(\n    private auth: AuthService,\n    private viewContainer: ViewContainerRef,\n    private templateRef: TemplateRef<any>\n  ) { }\n\n  condition: boolean;\n\n  ngOnInit() {\n    this.auth.isAuthenticated.subscribe(\n      (isAuthenticated) => {\n        if (isAuthenticated && this.condition || !isAuthenticated && !this.condition) {\n          this.viewContainer.createEmbeddedView(this.templateRef);\n        } else {\n          this.viewContainer.clear();\n        }\n      }\n    );\n  }\n\n  @Input() set appShowAuthed(condition: boolean) {\n    this.condition = condition;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-fond-details',\n  templateUrl: './fond-details.component.html',\n  styleUrls: ['./fond-details.component.scss']\n})\nexport class FondDetailsComponent implements OnInit {\n\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Комунальне господарство', cols: 1, rows: 1, icon: 'playlist_add_check' },\n          { title: 'Міський ліцей', cols: 1, rows: 1, icon: 'restore' },\n          { title: 'Міська рада', cols: 1, rows: 1, icon: 'people' },\n          { title: 'Школа №1', cols: 1, rows: 1, icon: 'backup' }\n        ];\n      }\n\n      return [\n        { id: 1, title: 'Комунальне господарство', cols: 1, rows: 1 },\n        { id: 2, title: 'Міський ліцей', cols: 1, rows: 1 },\n        { id: 3, title: 'Міська рада', cols: 1, rows: 1 },\n        { id: 4, title: 'Школа №1', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"grid-container\">\n  <div class=\"section-header\">\n    <h1 class=\"mat-h1\">Фонд</h1>\n  </div>\n  <app-cases-table></app-cases-table>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-fonds-list',\n  templateUrl: './fonds-list.component.html',\n  styleUrls: ['./fonds-list.component.scss']\n})\nexport class FondsListComponent implements OnInit {\n\n  @Input() fonds = [];\n\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return this.fonds;\n      }\n      return this.fonds;\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"grid-container\">\n  <div class=\"section-header\">\n    <h1 class=\"mat-h1\">Фонди</h1>\n  </div>\n  <mat-grid-list cols=\"3\" rowHeight=\"140px\">\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"1\" [rowspan]=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.fondName}}\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <p>Номер фонду: {{card.fondNumber}}</p>\n          <p>Кількість справ: {{card.caseQuantity}}</p>\n          <p>Дати: {{card.startDate | date}}  - {{card.endDate | date}}</p>\n        </mat-card-content>\n        <mat-card-actions>\n          <button [routerLink]=\"card._id\" mat-flat-button color=\"primary\">\n            <mat-icon>remove_red_eye</mat-icon>\n            <span>Переглянути</span>\n          </button>\n          <button mat-mini-fab color=\"primary\">\n            <mat-icon>add</mat-icon>\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FondsService} from '../services/fonds.service';\nimport {NgProgressService} from '../services/ng-progress.service';\nimport {PageEvent} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-fonds',\n  templateUrl: './fonds.component.html',\n  styleUrls: ['./fonds.component.scss']\n})\nexport class FondsComponent implements OnInit {\n\n  fonds = [];\n  length;\n  pageSize = 10;\n  pageIndex = 0;\n  pageEvent: PageEvent;\n\n  constructor(\n    private fondsService: FondsService,\n    private ngProgressService: NgProgressService\n  ) { }\n\n  ngOnInit(): void {\n    this.getFonds(this.pageSize, this.pageIndex);\n  }\n\n  getFonds(pageSize, pageIndex) {\n    this.ngProgressService.ngProgressComplete();\n    this.ngProgressService.ngProgressStart();\n    this.fondsService.getFonds(pageSize, pageIndex)\n      .subscribe(data => {\n        this.fonds = data.array;\n        this.length = data.length;\n        this.ngProgressService.ngProgressComplete();\n      });\n  }\n  togglePage(event): PageEvent {\n    this.fonds = [];\n    this.getFonds(event.pageSize, event.pageIndex);\n    return;\n  }\n\n}\n","<div *ngIf=\"fonds.length > 0\">\n  <app-fonds-list [fonds]=\"fonds\"></app-fonds-list>\n</div>\n<mat-paginator [length]=\"length\"\n               [pageSize]=\"pageSize\"\n               [pageIndex]=\"pageIndex\"\n               [pageSizeOptions]=\"[5, 10, 25, 100]\"\n               (page)=\"pageEvent = togglePage($event)\" class=\"paginator\">\n</mat-paginator>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-carousel-holder></app-carousel-holder>\n<app-services-list></app-services-list>\n","import {Component, OnInit} from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {AuthService} from '../services/auth.service';\nimport {BackgroundModeService} from '../services/background-mode.service';\nimport {User} from '../models/User';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n  );\n\n  nightMode: boolean;\n\n  currentUser: User;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private auth: AuthService,\n    private backgroundModeService: BackgroundModeService\n  ) {}\n\n  ngOnInit() {\n    this.backgroundModeService.currentMode\n      .subscribe(\n        (data) => {\n          this.nightMode = data;\n        }\n      );\n    this.getCurrentUser();\n  }\n\n  logOut() {\n    this.auth.purgeAuth();\n  }\n  toggleMode() {\n    this.backgroundModeService.toggleMode(this.nightMode);\n    this.backgroundModeService.currentMode.subscribe(\n      (data) => {\n        this.nightMode = data;\n      }\n    );\n  }\n  getCurrentUser() {\n    this.auth.currentUser.subscribe(\n      (userData) => {\n        this.currentUser = userData;\n      }\n    );\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" [class.night]=\"nightMode\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar [class.night]=\"nightMode\">Навігація</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['/fonds']\" [class.night]=\"nightMode\">Фонди</a>\n      <a mat-list-item href=\"#\" [class.night]=\"nightMode\">Форум</a>\n      <a mat-list-item href=\"#\" [class.night]=\"nightMode\">Link 3</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content [class.night]=\"nightMode\">\n    <mat-toolbar color=\"primary\" [class.night]=\"nightMode\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <button mat-icon-button (click)=\"drawer.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <span [routerLink]=\"['/']\">\n        Архів міста Нетішин\n      </span>\n      <span class=\"fill-remaining-space\"></span>\n      <div *appShowAuthed=\"false\">\n        <button [routerLink]=\"'/auth'\" mat-flat-button color=\"primary\">\n          <mat-icon>lock_open</mat-icon>\n          <span>Увійти</span>\n        </button>\n        <button [routerLink]=\"'/signup'\" mat-flat-button color=\"primary\">\n          <mat-icon>supervisor_account</mat-icon>\n          <span>Зареєструватися</span>\n        </button>\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"header_nav_button\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item (click)=\"toggleMode()\">\n            <mat-icon>nights_stay</mat-icon>\n            <span>Нічний режим</span>\n          </button>\n        </mat-menu>\n      </div>\n      <div *appShowAuthed=\"true\">\n        <button [routerLink]=\"'/profile'\" mat-flat-button color=\"primary\">\n<!--          <mat-icon>account_circle</mat-icon>-->\n<!--          <span>Особистий кабінет</span>-->\n          <img src=\"../../assets/default-user-avatar.png\" height=\"40\" width=\"40\" class=\"user-avatar\" alt=\"avatar\">\n          <span>{{currentUser.firstName}} {{currentUser.secondName}}</span>\n        </button>\n\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"header_nav_button\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button (click)=\"logOut()\" mat-menu-item>\n            <mat-icon>exit_to_app</mat-icon>\n            <span>Вийти</span>\n          </button>\n          <button mat-menu-item (click)=\"toggleMode()\">\n            <mat-icon>nights_stay</mat-icon>\n            <span>Нічний режим</span>\n          </button>\n        </mat-menu>\n      </div>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {User} from '../models/User';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(\n    private auth: AuthService\n  ) { }\n\n  currentUser: User;\n\n  ngOnInit(): void {\n    this.getCurrentUserData();\n  }\n\n  getCurrentUserData() {\n    this.auth.currentUser.subscribe(\n      (data) => this.currentUser = data\n    );\n  }\n}\n","<section class=\"profile-section\">\r\n  <mat-card>\r\n    <span>Особистий кабінет</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <button mat-icon-button aria-label=\"settings\">\r\n      <mat-icon>settings</mat-icon>\r\n    </button>\r\n  </mat-card>\r\n  <aside>\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-content class=\"mat-card-section\">\r\n        <div>\r\n          <img src=\"../../assets/default-user-avatar.png\" alt=\"avatar\" width=\"70\" height=\"70\">\r\n        </div>\r\n        <div>\r\n          <span class=\"mat-h1\">{{currentUser.firstName}} {{currentUser.secondName}}</span>\r\n          <ul class=\"user-activity-list\">\r\n            <li></li>\r\n          </ul>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-flat-button color=\"primary\">Написати адміністратору</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </aside>\r\n</section>\r\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-services-list',\n  templateUrl: './services-list.component.html',\n  styleUrls: ['./services-list.component.scss']\n})\nexport class ServicesListComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Видача документів', cols: 1, rows: 1, icon: 'playlist_add_check' },\n        { title: 'Зберігання документів', cols: 1, rows: 1, icon: 'restore' },\n        { title: 'Пенсійний архів', cols: 1, rows: 1, icon: 'people' },\n        { title: 'Оцифрування даних', cols: 1, rows: 1, icon: 'backup' }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<div class=\"grid-container\">\n  <h1 class=\"mat-h1\">Послуги</h1>\n  <mat-grid-list cols=\"4\" rowHeight=\"150px\">\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.title}}\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n         <mat-icon class=\"icon\">{{card.icon}}</mat-icon>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {environment} from '../../environments/environment';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private static formatErrors(error: any)  {\n    return throwError(error.error);\n  }\n\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\n    return this.http.get(`${environment.api_url}${path}`, { params })\n      .pipe(catchError(ApiService.formatErrors));\n  }\n\n  put(path: string, body: object = {}): Observable<any> {\n    return this.http.put(\n      `${environment.api_url}${path}`,\n      JSON.stringify(body)\n    ).pipe(catchError(ApiService.formatErrors));\n  }\n  post(path: string, body: object): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(\n      `${environment.api_url}${path}`,\n      JSON.stringify(body),\n      httpOptions\n    ).pipe(catchError(ApiService.formatErrors));\n  }\n  delete(path): Observable<any> {\n    return this.http.delete(\n      `${environment.api_url}${path}`\n    ).pipe(catchError(ApiService.formatErrors));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {User} from '../models/User';\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\nimport {JwtService} from './jwt.service';\nimport {ApiService} from './api.service';\nimport {distinctUntilChanged, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private currentUserSubject = new BehaviorSubject({} as User);\n  public currentUser = this.currentUserSubject.asObservable().pipe(distinctUntilChanged());\n\n  private isAuthenticatedSubject = new ReplaySubject<boolean>(1);\n  public isAuthenticated = this.isAuthenticatedSubject.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private jwtService: JwtService,\n    private apiService: ApiService\n  ) { }\n\n  populate() {\n    const token = this.jwtService.getToken();\n    if (token) {\n      this.apiService.post(`/auth/user`, {token})\n        .subscribe(\n          data => this.setAuth(data),\n          err => this.purgeAuth()\n        );\n    } else {\n      this.purgeAuth();\n    }\n  }\n  getCurrentUser(): User {\n    return this.currentUserSubject.value;\n  }\n  setAuth(user: User) {\n    this.jwtService.saveToken(user.token);\n    this.currentUserSubject.next(user);\n    this.isAuthenticatedSubject.next(true);\n  }\n\n  purgeAuth() {\n    this.jwtService.destroyToken();\n    this.currentUserSubject.next({} as User);\n    this.isAuthenticatedSubject.next(false);\n  }\n\n  attemptAuth(type, credentials): Observable<User> {\n    const route = (type === 'signin') ? '/auth/signin' : '/auth/signup';\n    return this.apiService.post(route, credentials)\n      .pipe(map(\n        data => {\n          this.setAuth(data);\n          return data;\n        }\n      ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, ReplaySubject} from 'rxjs';\nimport {distinctUntilChanged} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackgroundModeService {\n\n  private currentModeSubject = new ReplaySubject<boolean>(1);\n  public currentMode = this.currentModeSubject.asObservable();\n\n  constructor() { }\n\n  getCurrentMode() {\n    if (window.localStorage.nightMode) {\n      this.currentModeSubject.next(true);\n    } else {\n      this.currentModeSubject.next(false);\n    }\n  }\n  toggleMode(currentMode) {\n    currentMode ? this.currentModeSubject.next(false) : this.currentModeSubject.next(true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CaseService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getCases(pageSize, pageIndex): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    const req = {pageSize, pageIndex};\n    return this.http.post<any>('/api/load/cases', req, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FondsService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getFonds(pageSize, pageIndex): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    const req = {pageSize, pageIndex};\n    return this.http.post<any>('/api/load/fonds', req, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtService {\n\n  constructor() { }\n\n  getToken(): string {\n    return window.localStorage.jwtToken;\n  }\n\n  saveToken(token: string) {\n    window.localStorage.jwtToken = token;\n  }\n\n  destroyToken() {\n    window.localStorage.removeItem('jwtToken');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {NgProgress, NgProgressRef} from 'ngx-progressbar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgProgressService {\n\n  progressRef: NgProgressRef;\n\n  constructor(\n    public ngProgress: NgProgress\n  ) {\n    this.progressRef = this.ngProgress.ref();\n  }\n\n  ngProgressStart() {\n    this.progressRef.start();\n  }\n  ngProgressComplete() {\n    this.progressRef.complete();\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {Error} from '../models/Error';\nimport {AuthService} from '../services/auth.service';\nimport {NgProgressService} from '../services/ng-progress.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n  addressForm = this.fb.group({\n    firstName: [null, Validators.required],\n    secondName: [null, Validators.required],\n    email: [null, [Validators.required, Validators.email]],\n    password: [null, Validators.required],\n    confirm: [null, Validators.required, ]\n  });\n\n  isSubmit = false;\n  error = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private ngProgressService: NgProgressService,\n    private router: Router\n  ) {}\n\n  onSubmit() {\n    this.isSubmit = true;\n    this.error = null;\n    const credentials = {\n      firstName: this.addressForm.get('firstName').value,\n      secondName: this.addressForm.get('secondName').value,\n      email: this.addressForm.get('email').value,\n      password: this.addressForm.get('password').value\n    };\n    this.authService.attemptAuth('signup', credentials)\n      .subscribe(\n        data => this.router.navigateByUrl('/'),\n        err => {\n          this.error = err.message;\n          this.isSubmit = false;\n        }\n      );\n  }\n}\n","<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\">\n  <mat-card class=\"shipping-card\">\n    <mat-card-header>\n      <mat-card-title>Реєстрація</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Ім'я\" formControlName=\"firstName\">\n            <mat-error *ngIf=\"addressForm.controls['firstName'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Прізвище\" formControlName=\"secondName\">\n            <mat-error *ngIf=\"addressForm.controls['secondName'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Email\" formControlName=\"email\">\n            <mat-error *ngIf=\"addressForm.controls['email'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput type=\"password\" placeholder=\"Пароль\"  formControlName=\"password\">\n            <mat-error *ngIf=\"addressForm.controls['password'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput type=\"password\" placeholder=\"Підтвердьте пароль\"  formControlName=\"confirm\">\n            <mat-error *ngIf=\"addressForm.controls['confirm'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"error\">\n        <div class=\"col\">\n          <div class=\"mat-error\">\n            {{error}}\n          </div>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"\n      addressForm.controls['confirm'].hasError('required') ||\n      addressForm.controls['email'].hasError('required') ||\n      addressForm.controls['password'].hasError('required') ||\n      isSubmit\"\n      >Зареєструватися</button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url: 'http://localhost:4200/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}