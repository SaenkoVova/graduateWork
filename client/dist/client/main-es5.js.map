{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/add-fond/add-fond.component.ts","webpack:///src/app/add-fond/add-fond.component.html","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/carousel-holder/carousel-holder.component.ts","webpack:///src/app/carousel-holder/carousel-holder.component.html","webpack:///src/app/case-view/case-view.component.ts","webpack:///src/app/case-view/case-view.component.html","webpack:///src/app/cases-table/cases-table-datasource.ts","webpack:///src/app/cases-table/cases-table.component.ts","webpack:///src/app/cases-table/cases-table.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/directives/show-authed.directive.ts","webpack:///src/app/doanswer/doanswer.component.ts","webpack:///src/app/doanswer/doanswer.component.html","webpack:///src/app/fond-details/fond-details.component.ts","webpack:///src/app/fond-details/fond-details.component.html","webpack:///src/app/fonds-list/fonds-list.component.ts","webpack:///src/app/fonds-list/fonds-list.component.html","webpack:///src/app/fonds/fonds.component.ts","webpack:///src/app/fonds/fonds.component.html","webpack:///src/app/forum/forum.component.ts","webpack:///src/app/forum/forum.component.html","webpack:///src/app/guards/admin-guard.guard.ts","webpack:///src/app/guards/auth-admin.guard.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/review/review.component.ts","webpack:///src/app/review/review.component.html","webpack:///src/app/services-list/services-list.component.ts","webpack:///src/app/services-list/services-list.component.html","webpack:///src/app/services/admin-auth.service.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/background-mode.service.ts","webpack:///src/app/services/case.service.ts","webpack:///src/app/services/fonds.service.ts","webpack:///src/app/services/forum.service.ts","webpack:///src/app/services/jwt.service.ts","webpack:///src/app/services/ng-progress.service.ts","webpack:///src/app/services/profile.service.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///zlib (ignored)","webpack:///fs (ignored)","webpack:///http (ignored)","webpack:///https (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","AddFondComponent","fondService","_snackBar","onClose","fondNumber","fondName","console","log","fond","addFond","subscribe","data","emit","openSnackBar","message","err","action","open","duration","selector","templateUrl","styleUrls","AdminComponent","fb","adminAuthService","router","backgroundMode","addressForm","group","email","required","password","isSubmit","error","currentMode","nightMode","credentials","get","value","attemptAuth","navigateByUrl","onSubmit","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","auth","appMode","populate","getCurrentMode","events","currentRoute","url","AppModule","declarations","providers","bootstrap","AuthComponent","authService","CarouselHolderComponent","items","title","text","customOptions","loop","mouseDrag","touchDrag","pullDrag","dots","autoplay","navSpeed","navText","responsive","nav","CaseViewComponent","pdfSrc","EXAMPLE_DATA","CasesTableDataSource","cases","dataMutations","paginator","page","sort","sortChange","pipe","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","CasesTableComponent","caseService","ngProgressService","route","passFondTitle","displayedColumns","fonds","getFonds","ngProgressComplete","ngProgressStart","fondId","snapshot","params","getCases","dataSource","array","table","length","event","togglePage","DashboardComponent","barChartOptions","scaleShowVerticalLines","barChartLabels","barChartType","barChartLegend","barChartData","label","barChartOptions1","barChartLabels1","barChartType1","barChartLegend1","barChartData1","barChartOptions2","barChartLabels2","barChartType2","barChartLegend2","barChartData2","addFondVisible","purgeAuth","logOut","ShowAuthedDirective","viewContainer","templateRef","isAuthenticated","condition","createEmbeddedView","clear","DoanswerComponent","forumService","answer","doAnswer","JSON","parse","window","localStorage","getItem","FondDetailsComponent","setTitle","FondsListComponent","breakpointObserver","fondsService","dialogVisible","cards","observe","Handset","matches","currentUser","isEmpty","addToProfile","res","obj","key","hasOwnProperty","FondsComponent","ForumComponent","_formBuilder","jwtService","topics","stepperVisible","getTopics","secondFormGroup","secondCtrl","getToken","doQuestion","unshift","lastInsertedTopic","alert","toggleStepperVisible","AdminGuardGuard","state","getAdminToken","providedIn","AuthAdminGuard","HomeComponent","MessagesComponent","doAnswerVisible","removeItem","setItem","stringify","NavComponent","backgroundModeService","isHandset$","result","getCurrentUser","toggleMode","userData","ProfileComponent","profileService","reviews","getCurrentUserData","getProfileData","ReviewComponent","topicId","getReviewsForTopic","ServicesListComponent","cols","rows","icon","AdminAuthService","http","apiService","currentUserSubject","asObservable","isAuthenticatedSubject","token","post","setAuth","user","saveAdminToken","next","destroyAdminToken","type","ApiService","api_url","formatErrors","body","put","httpOptions","headers","AuthService","saveToken","destroyToken","BackgroundModeService","currentModeSubject","CaseService","FondsService","Authorization","adminToken","ForumService","question","JwtService","jwtToken","adminJwtToken","NgProgressService","ngProgress","progressRef","ref","start","complete","ProfileService","SignupComponent","firstName","secondName","confirm","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { FondsService } from '../services/fonds.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-add-fond',\n  templateUrl: './add-fond.component.html',\n  styleUrls: ['./add-fond.component.scss']\n})\n\nexport class AddFondComponent implements OnInit {\n\n  @Output() onClose = new EventEmitter();\n\n  fondNumber = '';\n  fondName = '';\n\n  constructor(\n    private fondService: FondsService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n  }\n  addFond() {\n    console.log(this.fondNumber, this.fondName)\n    const fond = {\n      fondNumber: this.fondNumber,\n      fondName: this.fondName\n    }\n    this.fondService.addFond(fond)\n      .subscribe((data) => {\n        this.onClose.emit();\n        this.openSnackBar(data.message, 'ок');\n      },\n      (err) => {\n        console.log(err)\n      })\n  }\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n}\n","<div class=\"modal\">\r\n  <div class=\"dialog\">\r\n    <input type=\"text\" placeholder=\"Номер фонду\" [(ngModel)]=\"fondNumber\">\r\n    <input type=\"text\" placeholder=\"Назва фонду\" [(ngModel)]=\"fondName\">\r\n    <div>\r\n      <button mat-flat-button color=\"primary\" (click)=\"onClose.emit()\" style=\"margin: 2px\">Відмінити</button>\r\n      <button mat-flat-button color=\"primary\" style=\"margin: 2px\" (click)=\"addFond()\">Додати</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {BackgroundModeService} from '../services/background-mode.service';\nimport {AdminAuthService} from '../services/admin-auth.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  addressForm = this.fb.group({\n    email: [null, [Validators.required, Validators.email]],\n    password: [null, [Validators.required]]\n  });\n\n  isSubmit = false;\n  error = null;\n  nightMode: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private adminAuthService: AdminAuthService,\n    private router: Router,\n    private backgroundMode: BackgroundModeService\n  ) {}\n\n  ngOnInit(): void {\n    this.backgroundMode.currentMode.subscribe(\n      (data) => this.nightMode = data\n    );\n  }\n\n  onSubmit() {\n    this.isSubmit = true;\n    this.error = null;\n    const credentials = {\n      email: this.addressForm.get('email').value,\n      password: this.addressForm.get('password').value\n    };\n    this.adminAuthService.attemptAuth('signin', credentials)\n      .subscribe(\n        data => {\n          this.router.navigateByUrl('admin/dashboard');\n        },\n        err => {\n          this.error = err.message;\n          this.isSubmit = false;\n        }\n      );\n  }\n\n}\n","<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\" [class.night]=\"nightMode\" class=\"form\">\r\n  <mat-card class=\"shipping-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>Вхід</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"Email\" formControlName=\"email\">\r\n            <mat-error *ngIf=\"addressForm.controls['email'].hasError('required')\">\r\n              Це поле <strong>обов'язкове</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput type=\"password\" placeholder=\"Пароль\"  formControlName=\"password\">\r\n            <mat-error *ngIf=\"addressForm.controls['password'].hasError('required')\">\r\n              Це поле <strong>обов'язкове</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"error\">\r\n        <div class=\"col\">\r\n          <div class=\"mat-error\">\r\n            {{error}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"isSubmit\" >Увійти</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</form>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {FondsComponent} from './fonds/fonds.component';\nimport {FondDetailsComponent} from './fond-details/fond-details.component';\nimport {CaseViewComponent} from './case-view/case-view.component';\nimport {AuthComponent} from './auth/auth.component';\nimport {SignupComponent} from './signup/signup.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {AdminComponent} from './admin/admin.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {AdminGuardGuard} from './guards/admin-guard.guard';\nimport {AuthAdminGuard} from \"./guards/auth-admin.guard\";\nimport { ForumComponent } from './forum/forum.component';\nimport { ReviewComponent } from './review/review.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'fonds', component: FondsComponent},\n  { path: 'forum', component: ForumComponent},\n  { path: 'forum/topic/:topicId', component: ReviewComponent},\n  { path: 'fonds/:id', component: FondDetailsComponent},\n  { path: 'fonds/:id/case/:caseId', component: CaseViewComponent},\n  { path: 'auth', component: AuthComponent},\n  { path: 'signup', component: SignupComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'admin' , component: AdminComponent, canActivate: [AuthAdminGuard] },\n  { path: 'admin/dashboard', component: DashboardComponent, canActivate: [AdminGuardGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from './services/auth.service';\nimport {BackgroundModeService} from './services/background-mode.service';\nimport {NavigationEnd, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  currentRoute;\n  constructor(\n    private auth: AuthService,\n    private appMode: BackgroundModeService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.auth.populate();\n    this.appMode.getCurrentMode();\n    this.router.events.subscribe((e) => {\n      if (e instanceof NavigationEnd) {\n        this.currentRoute = e.url;\n      }\n    });\n\n  }\n}\n","<ng-progress [color]=\"'#FF008B'\"\n             [thick]=\"true\"\n             [trickleSpeed]=\"500\"\n             [spinner]=\"false\"></ng-progress>\n<app-nav *ngIf=\"currentRoute !== '/admin' && currentRoute !== '/admin/dashboard'; else next\"></app-nav>\n\n\n<ng-template #next>\n  <router-outlet></router-outlet>\n</ng-template>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { CarouselModule } from 'ngx-owl-carousel-o';\nimport {CarouselHolderComponent} from './carousel-holder/carousel-holder.component';\nimport { HomeComponent } from './home/home.component';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { ServicesListComponent } from './services-list/services-list.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FondsComponent } from './fonds/fonds.component';\nimport { FondsListComponent } from './fonds-list/fonds-list.component';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { FondDetailsComponent } from './fond-details/fond-details.component';\nimport { CasesTableComponent } from './cases-table/cases-table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport {NgProgressModule} from 'ngx-progressbar';\nimport {FondsService} from './services/fonds.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport { CaseViewComponent } from './case-view/case-view.component';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\nimport { AuthComponent } from './auth/auth.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { SignupComponent } from './signup/signup.component';\nimport { ShowAuthedDirective } from './directives/show-authed.directive';\nimport { ProfileComponent } from './profile/profile.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { AdminComponent } from './admin/admin.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ChartsModule } from 'ng2-charts';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AddFondComponent } from './add-fond/add-fond.component';\nimport { ForumComponent } from './forum/forum.component';\nimport { ReviewComponent } from './review/review.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport {MatStepperModule} from \"@angular/material/stepper\";\nimport { DoanswerComponent } from './doanswer/doanswer.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    CarouselHolderComponent,\n    HomeComponent,\n    ServicesListComponent,\n    FondsComponent,\n    FondsListComponent,\n    FondDetailsComponent,\n    CasesTableComponent,\n    CaseViewComponent,\n    AuthComponent,\n    SignupComponent,\n    ShowAuthedDirective,\n    ProfileComponent,\n    AdminComponent,\n    DashboardComponent,\n    MessagesComponent,\n    AddFondComponent,\n    ForumComponent,\n    ReviewComponent,\n    DoanswerComponent,\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        LayoutModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        CarouselModule,\n        MatGridListModule,\n        MatCardModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatTableModule,\n        MatSortModule,\n        NgProgressModule,\n        HttpClientModule,\n        PdfViewerModule,\n        MatInputModule,\n        MatSelectModule,\n        MatRadioModule,\n        ReactiveFormsModule,\n        MatTabsModule,\n        ChartsModule,\n        MatSnackBarModule,\n        MatStepperModule,\n        FormsModule\n    ],\n  providers: [FondsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {AuthService} from '../services/auth.service';\nimport {Error} from '../models/Error';\nimport {Router} from '@angular/router';\nimport {BackgroundModeService} from '../services/background-mode.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  addressForm = this.fb.group({\n    email: [null, [Validators.required, Validators.email]],\n    password: [null, [Validators.required]]\n  });\n\n  isSubmit = false;\n  error = null;\n  nightMode: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private backgroundMode: BackgroundModeService\n  ) {}\n\n  ngOnInit(): void {\n    this.backgroundMode.currentMode.subscribe(\n      (data) => this.nightMode = data\n    );\n  }\n\n  onSubmit() {\n    this.isSubmit = true;\n    this.error = null;\n    const credentials = {\n      email: this.addressForm.get('email').value,\n      password: this.addressForm.get('password').value\n    };\n    this.authService.attemptAuth('signin', credentials)\n      .subscribe(\n        data => {\n          this.router.navigateByUrl('/');\n        },\n        err => {\n          this.error = err.message;\n          this.isSubmit = false;\n        }\n      );\n  }\n}\n","<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\" [class.night]=\"nightMode\">\n  <mat-card class=\"shipping-card\">\n    <mat-card-header>\n      <mat-card-title>Вхід</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Email\" formControlName=\"email\">\n            <mat-error *ngIf=\"addressForm.controls['email'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput type=\"password\" placeholder=\"Пароль\"  formControlName=\"password\">\n            <mat-error *ngIf=\"addressForm.controls['password'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"error\">\n        <div class=\"col\">\n          <div class=\"mat-error\">\n            {{error}}\n          </div>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"isSubmit\" >Увійти</button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {OwlOptions} from 'ngx-owl-carousel-o';\n\n@Component({\n  selector: 'app-carousel-holder',\n  templateUrl: './carousel-holder.component.html',\n  styleUrls: ['./carousel-holder.component.scss']\n})\nexport class CarouselHolderComponent implements OnInit {\n\n  items = [\n    {\n      title: 'ЧЕРГОВЕ ПОПОВНЕННЯ БАЗИ ДАНИХ «ОЦИФРОВАНІ ОПИСИ СПРАВ МІСЬКОГО АРХІВУ ПЕРІОДУ ПІСЛЯ 1917 РОКУ»',\n      text: 'Для надання доступу до довідкового апарату архіву у віддаленому режимі на сайті міського архіву' +\n      'додатково опубліковано цифрові копії описів справ 131 фонду установ і організацій 1920-1930-х років та періоду нацистської' +\n      'окупації України. До уваги користувачів – описи архівних справ Управління Південно-Західної залізниці, сільськогосподарських' + \n      'об’єднань 1920-1930 рр., а також органів місцевої влади на Хмельниччині 1941-1943 рр. Серед останніх – гебітскомісаріати міст' +\n      ', управи.'\n    },\n    {\n      title: 'ОСОБОВІ СПРАВИ ЕМІГРАНТІВ 20-30-Х РОКІВ МИНУЛОГО СТОЛІТТЯ ОНЛАЙН НА САЙТІ МІСЬКОГО АРХІВУ',\n      text: 'До розділу «Е-Архів» на веб-сайті міського архіву внесені цифрові копії 1476 архівних справ фонду № Р-3066'\n    }\n  ];\n\n  constructor() { }\n\n  customOptions: OwlOptions = {\n    loop: true,\n    mouseDrag: true,\n    touchDrag: false,\n    pullDrag: false,\n    dots: true,\n    autoplay: true,\n    navSpeed: 500,\n    navText: ['<', '>'],\n    responsive: {\n      0: {\n        items: 1\n      },\n      400: {\n        items: 1\n      },\n      740: {\n        items: 1\n      },\n      1080: {\n        items: 1\n      }\n    },\n    nav: false\n  };\n\n  ngOnInit(): void {\n  }\n\n}\n","<owl-carousel-o [options]=\"customOptions\">\n  <ng-template carouselSlide *ngFor=\"let item of items\">\n    <div class=\"slide\">\n     <div class=\"slide-mask\">\n       <h1>{{item.title}}</h1>\n       <hr>\n       <article>\n         {{item.text}}\n       </article>\n     </div>\n     </div>\n  </ng-template>\n</owl-carousel-o>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-case-view',\n  templateUrl: './case-view.component.html',\n  styleUrls: ['./case-view.component.scss']\n})\nexport class CaseViewComponent implements OnInit {\n\n  pdfSrc = 'https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pdf-viewer [src]=\"pdfSrc\"\r\n            [render-text]=\"true\"\r\n            style=\"display: block;\"\r\n></pdf-viewer>\r\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface CasesTableItem {\n  case_index: number;\n  id: number;\n  title: string;\n  startDate: string;\n  endDate: string;\n  page_quantity: number;\n  notes: string;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: CasesTableItem[] = [\n  // {id: 1, case_index: 1, title: 'Опис 1', dates: '1999-2000', page_quantity: 100, notes: 'Примітки'}\n];\n\n/**\n * Data source for the CasesTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class CasesTableDataSource extends DataSource<CasesTableItem> {\n  data: CasesTableItem[];\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor(private cases) {\n    super();\n    this.data = cases;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<CasesTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: CasesTableItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: CasesTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.title, b.title, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { CasesTableDataSource, CasesTableItem } from './cases-table-datasource';\nimport {CaseService} from '../services/case.service';\nimport {NgProgressService} from '../services/ng-progress.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-cases-table',\n  templateUrl: './cases-table.component.html',\n  styleUrls: ['./cases-table.component.scss']\n})\nexport class CasesTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<CasesTableItem>;\n  dataSource: CasesTableDataSource;\n  @Output() passFondTitle = new EventEmitter\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'case_index', 'title', 'dates', 'page_quantity', 'notes'];\n  fonds = [];\n  length;\n  pageSize = 10;\n  pageIndex = 0;\n  fondName = null;\n  pageEvent: PageEvent;\n\n  constructor(\n    private caseService: CaseService,\n    private ngProgressService: NgProgressService,\n    private route: ActivatedRoute,\n  ) {\n  }\n\n  ngOnInit() {\n    this.getFonds(this.pageSize, this.pageIndex);\n  }\n\n  getFonds(pageSize, pageIndex) {\n    this.ngProgressService.ngProgressComplete();\n    this.ngProgressService.ngProgressStart();\n    const fondId = this.route.snapshot.params.id;\n    this.caseService.getCases(pageSize, pageIndex, fondId)\n      .subscribe(data => {\n        this.dataSource = new CasesTableDataSource(data.array);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        this.table.dataSource = this.dataSource;\n        this.length = data.length;\n        this.fondName = data.fondName;\n        this.passFondTitle.emit(this.fondName)\n        this.ngProgressService.ngProgressComplete();\n      });\n  }\n  togglePage(event): PageEvent {\n    this.dataSource = null;\n    this.getFonds(event.pageSize, event.pageIndex);\n    return;\n  }\n\n  ngAfterViewInit(): void {\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>№</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.caseNumber}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"case_index\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Індекс справи</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.caseIndex}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Заголовок справи</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.caseTitle}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"dates\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Крайні дати документів</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.startDate |date}} - {{row.endDate | date}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"page_quantity\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Кількість аркушів у справі</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.pageQuantity}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"notes\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Примітки</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.notes}}\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" class=\"last-cell\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"'case/' + row._id\">\n            <span>Переглянути PDF</span>\n          </button>\n          <button mat-menu-item>\n            <span>Додати до закладок</span>\n          </button>\n        </mat-menu>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"length\"\n      [pageIndex]=\"pageIndex\"\n      [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"[25, 50, 100, 250]\"\n       (page)=\"pageEvent = togglePage($event)\" class=\"paginator\">\n  </mat-paginator>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AdminAuthService} from '../services/admin-auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  public barChartOptions = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n\n  public barChartLabels = ['2018', '2019', '2020'];\n\n  public barChartType = 'line';\n\n  public barChartLegend = true;\n\n  public barChartData = [\n    {data: [67, 50, 45 ], label: 'Динаміка поповнення фондів'},\n  ];\n\n\n  public barChartOptions1 = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n\n  public barChartLabels1 = ['Понеділок', 'Вівторок', 'Середа', 'Четверг', 'П`ятниця', 'Субота', 'Неділя'];\n\n  public barChartType1 = 'bar';\n\n  public barChartLegend1 = true;\n\n  public barChartData1 = [\n    {data: [67, 50, 45, 39, 100, 23, 44 ], label: 'Динаміка відвідуваності за минулий тиждень'},\n  ];\n\n  public barChartOptions2 = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n\n  public barChartLabels2 = ['Фонд справ постійного зберігання', 'Пенсійний фонд'];\n\n  public barChartType2 = 'pie';\n\n  public barChartLegend2 = true;\n\n  public barChartData2 = [\n    {data: [10000, 4530]},\n  ];\n\n  addFondVisible = false;\n\n  constructor(\n    private adminAuthService: AdminAuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  logOut() {\n    this.adminAuthService.purgeAuth();\n  }\n}\n","<mat-toolbar class=\"dashboard-header\">\n  <span [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" style=\"cursor: pointer;\" >Архівний відділ</span>\n\n  <!-- This fills the remaining space of the current row -->\n  <span class=\"example-fill-remaining-space\"></span>\n\n  <button mat-button (click)=\"addFondVisible = !addFondVisible\">Додати фонд</button>\n\n  <app-add-fond *ngIf=\"addFondVisible\" (onClose)=\"addFondVisible = false\" ></app-add-fond>\n\n  <button mat-button (click)=\"logOut()\">Вийти</button>\n</mat-toolbar>\n<div class=\"charts-container\">\n  <div class=\"chart-wrapper\">\n    <canvas baseChart\n            [datasets]=\"barChartData\"\n            [labels]=\"barChartLabels\"\n            [options]=\"barChartOptions\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"></canvas>\n  </div>\n  <div class=\"chart-wrapper\">\n    <canvas baseChart\n            [datasets]=\"barChartData1\"\n            [labels]=\"barChartLabels1\"\n            [options]=\"barChartOptions1\"\n            [legend]=\"barChartLegend1\"\n            [chartType]=\"barChartType1\"></canvas>\n  </div>\n  <div class=\"chart-wrapper\">\n    <canvas baseChart\n            [datasets]=\"barChartData2\"\n            [labels]=\"barChartLabels2\"\n            [options]=\"barChartOptions2\"\n            [legend]=\"barChartLegend2\"\n            [chartType]=\"barChartType2\"></canvas>\n  </div>\n</div>\n<div>\n  <mat-tab-group>\n    <mat-tab label=\"Повідомлення\">\n      <app-messages></app-messages>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n","import {Directive, Input, OnInit, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {AuthService} from '../services/auth.service';\n\n@Directive({\n  selector: '[appShowAuthed]'\n})\nexport class ShowAuthedDirective implements OnInit {\n\n  constructor(\n    private auth: AuthService,\n    private viewContainer: ViewContainerRef,\n    private templateRef: TemplateRef<any>\n  ) { }\n\n  condition: boolean;\n\n  ngOnInit() {\n    this.auth.isAuthenticated.subscribe(\n      (isAuthenticated) => {\n        if (isAuthenticated && this.condition || !isAuthenticated && !this.condition) {\n          this.viewContainer.createEmbeddedView(this.templateRef);\n        } else {\n          this.viewContainer.clear();\n        }\n      }\n    );\n  }\n\n  @Input() set appShowAuthed(condition: boolean) {\n    this.condition = condition;\n  }\n}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ForumService } from '../services/forum.service';\n\n@Component({\n  selector: 'app-doanswer',\n  templateUrl: './doanswer.component.html',\n  styleUrls: ['./doanswer.component.scss']\n})\nexport class DoanswerComponent implements OnInit {\n\n\n  @Output() onClose = new EventEmitter();\n\n  answer = '';\n\n  constructor(\n    private forumService: ForumService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  doAnswer() {\n    this.forumService.doAnswer(JSON.parse(window.localStorage.getItem('RequestId')), this.answer)\n      .subscribe((data) => {\n        this.onClose.emit();\n      })\n  }\n\n}\n","\n<div class=\"modal\">\n    <div class=\"dialog\">\n      <h1>Ваша відповідь</h1>\n      <textarea rows=\"12\" cols=\"12\" [(ngModel)]=\"answer\"></textarea>\n      <div>\n        <button mat-flat-button color=\"primary\" (click)=\"onClose.emit()\" style=\"margin: 2px\">Відмінити</button>\n        <button mat-flat-button color=\"primary\" style=\"margin: 2px\" (click)=\"doAnswer()\">Відповісти</button>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-fond-details',\n  templateUrl: './fond-details.component.html',\n  styleUrls: ['./fond-details.component.scss']\n})\nexport class FondDetailsComponent implements OnInit {\n\n  fondName = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  setTitle(event) {\n    this.fondName = event\n  }\n}\n","<div class=\"grid-container\">\n  <div class=\"section-header\">\n    <h1 class=\"mat-h1\">Фонд {{fondName}}</h1>\n  </div>\n  <app-cases-table (passFondTitle)=\"setTitle($event)\"></app-cases-table>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {map} from 'rxjs/operators';\nimport {FondsService} from \"../services/fonds.service\";\nimport { AuthService } from '../services/auth.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-fonds-list',\n  templateUrl: './fonds-list.component.html',\n  styleUrls: ['./fonds-list.component.scss']\n})\nexport class FondsListComponent implements OnInit {\n\n  @Input() fonds = [];\n\n  dialogVisible = false\n\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return this.fonds;\n      }\n      return this.fonds;\n    })\n  );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private fondsService: FondsService,\n    private authService: AuthService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  addToProfile(fondId) {\n\n    this.authService.currentUser.subscribe((data) => {\n      if(this.isEmpty(data)) {\n        this.dialogVisible = true;\n      }\n      else {\n        this.fondsService.addToProfile(fondId)\n          .subscribe((res) => {\n            this.openSnackBar(res.message, 'ок');\n          })\n      }\n    })\n  }\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n  closeDialog() {\n    this.dialogVisible = false;\n  }\n  isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n  }\n}\n","<div class=\"grid-container\">\n  <div class=\"section-header\">\n    <h1 class=\"mat-h1\">Фонди</h1>\n  </div>\n  <div class=\"dialog-bg\" *ngIf=\"dialogVisible\">\n    <div class=\"dialog\">\n      <h4>Для додавання в закладки авторизуйтесь</h4>\n      <button mat-flat-button (click)=\"closeDialog()\" color=\"primary\">\n        <span>ок</span>\n      </button>\n    </div>\n  </div>\n  <mat-grid-list cols=\"3\" rowHeight=\"160px\">\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"1\" [rowspan]=\"2\">\n      <mat-card class=\"dashboard-card\" style=\"display: flex; flex-direction: column; justify-content: space-between;\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.fondName}}\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <p>Номер фонду: {{card.fondNumber}}</p>\n          <p>Кількість справ: {{card.caseQuantity}}</p>\n          <p>Дати: {{card.startDate | date}}  - {{card.endDate | date}}</p>\n        </mat-card-content>\n        <mat-card-actions style=\"padding-bottom: 20px;\">\n          <button [routerLink]=\"card._id\" mat-flat-button color=\"primary\">\n            <mat-icon>remove_red_eye</mat-icon>\n            <span>Переглянути</span>\n          </button>\n          <button mat-mini-fab color=\"primary\" (click)=\"addToProfile(card._id)\">\n            <mat-icon>add</mat-icon>\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FondsService} from '../services/fonds.service';\nimport {NgProgressService} from '../services/ng-progress.service';\nimport {PageEvent} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-fonds',\n  templateUrl: './fonds.component.html',\n  styleUrls: ['./fonds.component.scss']\n})\nexport class FondsComponent implements OnInit {\n\n  fonds = [];\n  length;\n  pageSize = 10;\n  pageIndex = 0;\n  pageEvent: PageEvent;\n\n  constructor(\n    private fondsService: FondsService,\n    private ngProgressService: NgProgressService\n  ) { }\n\n  ngOnInit(): void {\n    this.getFonds(this.pageSize, this.pageIndex);\n  }\n\n  getFonds(pageSize, pageIndex) {\n    this.ngProgressService.ngProgressComplete();\n    this.ngProgressService.ngProgressStart();\n    this.fondsService.getFonds(pageSize, pageIndex)\n      .subscribe(data => {\n        this.fonds = data.array;\n        this.length = data.length;\n        this.ngProgressService.ngProgressComplete();\n      });\n  }\n  togglePage(event): PageEvent {\n    this.fonds = [];\n    this.getFonds(event.pageSize, event.pageIndex);\n    return;\n  }\n\n}\n","<div *ngIf=\"fonds.length > 0\">\n  <app-fonds-list [fonds]=\"fonds\"></app-fonds-list>\n</div>\n<mat-paginator [length]=\"length\"\n               [pageSize]=\"pageSize\"\n               [pageIndex]=\"pageIndex\"\n               [pageSizeOptions]=\"[5, 10, 25, 100]\"\n               (page)=\"pageEvent = togglePage($event)\" class=\"paginator\">\n</mat-paginator>\n","import { Component, OnInit } from '@angular/core';\nimport { ForumService } from '../services/forum.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { JwtService } from '../services/jwt.service';\nimport { Router } from '@angular/router';\nimport { ThemeService } from 'ng2-charts';\n\n@Component({\n  selector: 'app-forum',\n  templateUrl: './forum.component.html',\n  styleUrls: ['./forum.component.scss']\n})\nexport class ForumComponent implements OnInit {\n\n  topics = [];\n  secondFormGroup: FormGroup;\n  stepperVisible = false;\n\n  constructor(\n    private forumService: ForumService,\n    private _formBuilder: FormBuilder,\n    private jwtService: JwtService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.forumService.getTopics()\n      .subscribe((data) => {\n        this.topics = data.topics;\n      })\n\n      this.secondFormGroup = this._formBuilder.group({\n        secondCtrl: ['', Validators.required]\n      });\n\n  }\n  toggleStepperVisible() {\n    this.stepperVisible = !this.stepperVisible;\n  }\n  doQuestion() {\n    if(this.jwtService.getToken()) {\n      this.forumService.doQuestion(this.secondFormGroup.value.secondCtrl, this.jwtService.getToken())\n        .subscribe((res) => {\n          this.topics.unshift(res.lastInsertedTopic[0]);\n          this.stepperVisible = false;\n        },\n        (err) => {\n          alert('Щоб залишити питання авторизуйтесь, будь ласка')\n        })\n    }\n    else {\n      alert('Щоб залишити питання авторизуйтесь, будь ласка')\n    }\n  }\n}\n","<main>\n    <div>\n        <h1>Запитання / Відповідь</h1>\n    </div>\n    <div>\n      <button  mat-flat-button color=\"primary\" (click)=\"toggleStepperVisible()\">Задати питання</button>\n    </div>\n    <div>\n      <mat-horizontal-stepper *ngIf=\"stepperVisible\" [linear]=\"true\" #stepper>\n        <mat-step [stepControl]=\"secondFormGroup\">\n          <form [formGroup]=\"secondFormGroup\">\n            <ng-template matStepLabel>Напишіть ваше запитання</ng-template>\n            <mat-form-field>\n              <mat-label>Текст запитання</mat-label>\n              <input matInput formControlName=\"secondCtrl\"\n                     required>\n            </mat-form-field>\n            <div>\n              <button mat-button matStepperNext>Далі</button>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <ng-template matStepLabel>Готово</ng-template>\n          <p>Все вірно?</p>\n          <div>\n            <button mat-button matStepperPrevious>Повернутися</button>\n            <button mat-button (click)=\"stepper.reset()\">Скинути</button>\n            <button mat-button (click)=\"doQuestion()\">Задати питання</button>\n          </div>\n        </mat-step>\n      </mat-horizontal-stepper>\n    </div>\n    <ol class=\"gradient-list\">\n      <li *ngFor=\"let item of topics\">\n        <h1 routerLink=\"/forum/topic/{{item._id}}\" routerLinkActive=\"router-link-active\">{{item.title}}</h1>\n        <span class=\"cell\"><span class=\"cell-title\">Кількість повідомлень:</span> {{item.messagesQuantity}}</span>\n        <span class=\"cell\"><span class=\"cell-title\">Кількість переглядів:</span> {{item.views}}</span>\n        <span [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\"  class=\"cell\"><span class=\"cell-title\">Автор:</span> {{item.author.firstName}} {{item.author.secondName}}</span>\n        <span class=\"cell\"><span class=\"cell-title\">Остання відповідь:</span> {{item.lastAnswer | date: 'short'}}</span>\n      </li>\n    </ol>\n  </main>","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {JwtService} from '../services/jwt.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuardGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private jwtService: JwtService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.jwtService.getAdminToken()) {\n      return true;\n    }\n    this.router.navigateByUrl('/admin');\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport {JwtService} from '../services/jwt.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthAdminGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private jwtService: JwtService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.jwtService.getAdminToken()) {\n      this.router.navigateByUrl('/admin/dashboard');\n      return false;\n    }\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"home-wrapper\">\n    <app-carousel-holder></app-carousel-holder>\n    <app-services-list></app-services-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ForumService } from '../services/forum.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n  displayedColumns: string[] = ['firstName', 'secondName', 'title', 'status'];\n  dataSource = null;\n  doAnswerVisible = false\n  constructor(\n    private forumService: ForumService,\n  ) { }\n\n  ngOnInit(): void {\n    this.forumService.getTopics()\n      .subscribe((res) => {\n        this.dataSource = res.topics;\n      })\n  }\n\n  doAnswer(id) {\n    this.doAnswerVisible = !this.doAnswerVisible;\n    window.localStorage.removeItem('RequestId');\n    window.localStorage.setItem('RequestId', JSON.stringify(id));\n  }\n  getTopics() {\n    this.doAnswerVisible = false;\n    this.forumService.getTopics()\n      .subscribe((res) => {\n        this.dataSource = res.topics;\n      })\n  }\n\n}\n","<app-doanswer *ngIf=\"doAnswerVisible\" (onClose)=\"getTopics()\"></app-doanswer>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n  \n  <!-- Name Column -->\n  <ng-container matColumnDef=\"firstName\">\n    <th mat-header-cell *matHeaderCellDef> Ім'я </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.author.firstName}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"secondName\">\n    <th mat-header-cell *matHeaderCellDef> Прізвище </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.author.secondName}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"title\">\n    <th mat-header-cell *matHeaderCellDef> Повідомлення </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n  </ng-container>\n\n  \n  <ng-container matColumnDef=\"status\">\n    <th mat-header-cell *matHeaderCellDef> Статус </th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-flat-button color=\"primary\" *ngIf=\"element.messagesQuantity === 0\" (click)=\"doAnswer(element._id)\">Відповісти</button>\n      <button mat-flat-button color=\"accent\" *ngIf=\"element.messagesQuantity !== 0\">Переглянуто</button>\n      <span *ngIf=\"element.messagesQuantity.length\">Переглянуто</span>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component, OnInit} from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {AuthService} from '../services/auth.service';\nimport {BackgroundModeService} from '../services/background-mode.service';\nimport {User} from '../models/User';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n  );\n\n  nightMode: boolean;\n\n  currentUser: User;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private auth: AuthService,\n    private backgroundModeService: BackgroundModeService\n  ) {}\n\n  ngOnInit() {\n    this.backgroundModeService.currentMode\n      .subscribe(\n        (data) => {\n          this.nightMode = data;\n        }\n      );\n    this.getCurrentUser();\n  }\n\n  logOut() {\n    this.auth.purgeAuth();\n  }\n  toggleMode() {\n    this.backgroundModeService.toggleMode(this.nightMode);\n    this.backgroundModeService.currentMode.subscribe(\n      (data) => {\n        this.nightMode = data;\n      }\n    );\n  }\n  getCurrentUser() {\n    this.auth.currentUser.subscribe(\n      (userData) => {\n        console.log(userData);\n        this.currentUser = userData;\n      }\n    );\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" [class.night]=\"nightMode\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar [class.night]=\"nightMode\">Навігація</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['/']\" [class.night]=\"nightMode\">\n        <mat-icon>home</mat-icon>\n        <span>Головна</span>\n      </a>\n      <a mat-list-item [routerLink]=\"['/fonds']\" [class.night]=\"nightMode\">\n        <mat-icon>list</mat-icon>\n        <span>Фонди</span>\n      </a>\n      <a mat-list-item [routerLink]=\"['/forum']\" routerLinkActive=\"router-link-active\"  [class.night]=\"nightMode\">\n        <mat-icon>question_answer</mat-icon>\n        <span>Форум</span>\n      </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content [class.night]=\"nightMode\">\n    <mat-toolbar color=\"primary\" [class.night]=\"nightMode\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <button mat-icon-button (click)=\"drawer.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <span [routerLink]=\"['/']\">\n        Архівний відділ\n      </span>\n      <span class=\"fill-remaining-space\"></span>\n      <div *appShowAuthed=\"false\">\n        <button [routerLink]=\"'/auth'\" mat-flat-button color=\"primary\">\n          <mat-icon>lock_open</mat-icon>\n          <span>Увійти</span>\n        </button>\n        <button [routerLink]=\"'/signup'\" mat-flat-button color=\"primary\">\n          <mat-icon>supervisor_account</mat-icon>\n          <span>Зареєструватися</span>\n        </button>\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"header_nav_button\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item (click)=\"toggleMode()\">\n            <mat-icon>nights_stay</mat-icon>\n            <span>Нічний режим</span>\n          </button>\n        </mat-menu>\n      </div>\n      <div *appShowAuthed=\"true\">\n        <button [routerLink]=\"'/profile'\" mat-flat-button color=\"primary\">\n          <img src=\"../../assets/default-user-avatar.png\" height=\"40\" width=\"40\" class=\"user-avatar\" alt=\"avatar\">\n          <span>{{currentUser.firstName}} {{currentUser.secondName}}</span>\n        </button>\n\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"header_nav_button\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button (click)=\"logOut()\" mat-menu-item>\n            <mat-icon>exit_to_app</mat-icon>\n            <span>Вийти</span>\n          </button>\n          <button mat-menu-item (click)=\"toggleMode()\">\n            <mat-icon>nights_stay</mat-icon>\n            <span>Нічний режим</span>\n          </button>\n        </mat-menu>\n      </div>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {User} from '../models/User';\nimport {ProfileService} from '../services/profile.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  fonds = [];\n  cases = [];\n  reviews = [];\n\n  constructor(\n    private auth: AuthService,\n    private profileService: ProfileService\n  ) { }\n\n  currentUser: User;\n\n  ngOnInit(): void {\n    this.getCurrentUserData();\n    this.profileService.getProfileData()\n      .subscribe((data) => {\n        this.fonds = data.fonds;\n        this.reviews = data.topics;\n      });\n\n  }\n\n  getCurrentUserData() {\n    this.auth.currentUser.subscribe(\n      (data) => this.currentUser = data\n    );\n  }\n}\n","<section class=\"profile-section\">\r\n  <mat-card>\r\n    <span>Особистий кабінет</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n  </mat-card>\r\n  <aside>\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-content class=\"mat-card-section\">\r\n        <div>\r\n          <img src=\"../../assets/default-user-avatar.png\" alt=\"avatar\" width=\"70\" height=\"70\">\r\n        </div>\r\n        <div>\r\n          <span class=\"mat-h1\">{{currentUser.firstName}} {{currentUser.secondName}}</span>\r\n          <br>\r\n          <span>Дата приєднання: {{currentUser.connectionDate | date}}</span>\r\n        </div>\r\n      </mat-card-content>\r\n      \r\n    </mat-card>\r\n  </aside>\r\n  <div class=\"content\">\r\n    <mat-tab-group>\r\n      <mat-tab label=\"Збережені фонди\">\r\n        <mat-selection-list #shoes>\r\n          <mat-list-option *ngFor=\"let item of fonds\" [routerLink]=\"'/fonds/' + item._id\">\r\n            Назва фонду: {{item.fondName}} > Роки існування: {{item.startDate | date}} {{ item.endDate | date}}\r\n            > Кількість справ {{item.caseQuantity}}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </mat-tab>\r\n      <mat-tab label=\"Збережені справи\">\r\n        <mat-selection-list>\r\n          <mat-list-option *ngFor=\"let item of cases\" [routerLink]=\"'/fonds/' + item._id\">\r\n            Заголовок спарви: {{item.caseTitle}}\r\n          </mat-list-option>\r\n          <mat-list-option *ngIf=\"cases.length == 0\">\r\n            <p>Справ не додано</p>\r\n          </mat-list-option>\r\n          </mat-selection-list>\r\n      </mat-tab>\r\n      <mat-tab label=\"Коментарі\">\r\n        <mat-selection-list #shoes>\r\n          <mat-list-option *ngFor=\"let item of reviews\">\r\n              <span routerLink=\"/forum/topic/{{item._id}}\" routerLinkActive=\"router-link-active\">{{item.title}}</span>\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ForumService } from '../services/forum.service';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.scss']\n})\nexport class ReviewComponent implements OnInit {\n\n  reviews = null\n\n  constructor(\n    private route: ActivatedRoute,\n    private forumService: ForumService\n  ) { }\n\n  ngOnInit(): void {\n    const topicId = this.route.snapshot.params.topicId;\n    this.getReviewsForTopic(topicId)\n  }\n  getReviewsForTopic(topicId) {\n    this.forumService.getReviewsForTopic(topicId)\n      .subscribe((data) => {\n        this.reviews = data.reviews;\n      })\n  }\n\n}\n","<main>\n    <div>\n        <h1>Запитання / Відповідь</h1>\n    </div>\n    <ol class=\"gradient-list\">\n      <li *ngFor=\"let item of reviews\">\n        <article>\n            {{item.answer}}\n        </article>\n      </li>\n    </ol>\n  </main>","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-services-list',\n  templateUrl: './services-list.component.html',\n  styleUrls: ['./services-list.component.scss']\n})\nexport class ServicesListComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Видача документів', cols: 1, rows: 1, icon: 'playlist_add_check' },\n        { title: 'Зберігання документів', cols: 1, rows: 1, icon: 'restore' },\n        { title: 'Пенсійний архів', cols: 1, rows: 1, icon: 'people' },\n        { title: 'Оцифрування даних', cols: 1, rows: 1, icon: 'backup' }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<div class=\"grid-container\">\n  <h1 class=\"mat-h1\">Послуги</h1>\n  <mat-grid-list cols=\"4\" rowHeight=\"150px\">\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.title}}\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n         <mat-icon class=\"icon\">{{card.icon}}</mat-icon>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\nimport {User} from '../models/User';\nimport {distinctUntilChanged, map} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {JwtService} from './jwt.service';\nimport {ApiService} from './api.service';\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthService {\n\n  private currentUserSubject = new BehaviorSubject({} as User);\n  public currentUser = this.currentUserSubject.asObservable().pipe(distinctUntilChanged());\n\n  private isAuthenticatedSubject = new ReplaySubject<boolean>(1);\n  public isAuthenticated = this.isAuthenticatedSubject.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private jwtService: JwtService,\n    private apiService: ApiService,\n    private router: Router\n  ) { }\n\n  populate() {\n    const token = this.jwtService.getAdminToken();\n    if (token) {\n      this.apiService.post(`/auth/user`, {token})\n        .subscribe(\n          data => this.setAuth(data),\n          err => this.purgeAuth()\n        );\n    } else {\n      this.purgeAuth();\n    }\n  }\n  getCurrentUser(): User {\n    return this.currentUserSubject.value;\n  }\n  setAuth(user: User) {\n    this.jwtService.saveAdminToken(user.token);\n    this.currentUserSubject.next(user);\n    this.isAuthenticatedSubject.next(true);\n  }\n\n  purgeAuth() {\n    this.jwtService.destroyAdminToken();\n    this.currentUserSubject.next({} as User);\n    this.isAuthenticatedSubject.next(false);\n    this.router.navigateByUrl('/admin');\n  }\n\n  attemptAuth(type, credentials): Observable<User> {\n    const route = (type === 'signin') ? '/auth/signin' : '/auth/signup';\n    return this.apiService.post(route, credentials)\n      .pipe(map(\n        data => {\n          this.setAuth(data);\n          return data;\n        }\n      ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {environment} from '../../environments/environment';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private static formatErrors(error: any)  {\n    return throwError(error.error);\n  }\n\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\n    return this.http.get(`${environment.api_url}${path}`, { params })\n      .pipe(catchError(ApiService.formatErrors));\n  }\n\n  put(path: string, body: object = {}): Observable<any> {\n    return this.http.put(\n      `${environment.api_url}${path}`,\n      JSON.stringify(body)\n    ).pipe(catchError(ApiService.formatErrors));\n  }\n  post(path: string, body: object): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(\n      `${environment.api_url}${path}`,\n      JSON.stringify(body),\n      httpOptions\n    ).pipe(catchError(ApiService.formatErrors));\n  }\n  delete(path): Observable<any> {\n    return this.http.delete(\n      `${environment.api_url}${path}`\n    ).pipe(catchError(ApiService.formatErrors));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {User} from '../models/User';\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\nimport {JwtService} from './jwt.service';\nimport {ApiService} from './api.service';\nimport {distinctUntilChanged, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private currentUserSubject = new BehaviorSubject({} as User);\n  public currentUser = this.currentUserSubject.asObservable().pipe(distinctUntilChanged());\n\n  private isAuthenticatedSubject = new ReplaySubject<boolean>(1);\n  public isAuthenticated = this.isAuthenticatedSubject.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private jwtService: JwtService,\n    private apiService: ApiService\n  ) { }\n\n  populate() {\n    const token = this.jwtService.getToken();\n    if (token) {\n      this.apiService.post(`/auth/user`, {token})\n        .subscribe(\n          data => this.setAuth(data),\n          err => this.purgeAuth()\n        );\n    } else {\n      this.purgeAuth();\n    }\n  }\n  getCurrentUser(): User {\n    return this.currentUserSubject.value;\n  }\n  setAuth(user: User) {\n    this.jwtService.saveToken(user.token);\n    this.currentUserSubject.next(user);\n    this.isAuthenticatedSubject.next(true);\n  }\n\n  purgeAuth() {\n    this.jwtService.destroyToken();\n    this.currentUserSubject.next({} as User);\n    this.isAuthenticatedSubject.next(false);\n  }\n\n  attemptAuth(type, credentials): Observable<User> {\n    const route = (type === 'signin') ? '/auth/signin' : '/auth/signup';\n    return this.apiService.post(route, credentials)\n      .pipe(map(\n        data => {\n          this.setAuth(data);\n          return data;\n        }\n      ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, ReplaySubject} from 'rxjs';\nimport {distinctUntilChanged} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackgroundModeService {\n\n  private currentModeSubject = new ReplaySubject<boolean>(1);\n  public currentMode = this.currentModeSubject.asObservable();\n\n  constructor() { }\n\n  getCurrentMode() {\n    if (window.localStorage.nightMode) {\n      this.currentModeSubject.next(true);\n    } else {\n      this.currentModeSubject.next(false);\n    }\n  }\n  toggleMode(currentMode) {\n    currentMode ? this.currentModeSubject.next(false) : this.currentModeSubject.next(true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CaseService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getCases(pageSize, pageIndex, fondId): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    const req = {pageSize, pageIndex, fondId};\n    return this.http.post<any>('/api/load/cases', req, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {JwtService} from './jwt.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FondsService {\n\n  constructor(\n    private http: HttpClient,\n    private jwtService: JwtService\n  ) { }\n\n  getFonds(pageSize, pageIndex): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    const req = {pageSize, pageIndex};\n    return this.http.post<any>('/api/load/fonds', req, httpOptions);\n  }\n  addToProfile(fondId): any {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.jwtService.getToken()}`\n      })\n    };\n    const req = {fondId};\n    return this.http.post<any>(\n      '/api/profile/addFond',\n      req,\n      httpOptions\n    );\n  }\n\n  addFond(fond) {\n    const adminToken = window.localStorage.getItem('adminJwtToken');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${adminToken}`\n      })\n    };\n    return this.http.post<any>(\n      '/api/admin/addFond',\n      fond,\n      httpOptions\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForumService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getTopics() {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.get<any>('/api/forum', httpOptions);\n  }\n\n  getReviewsForTopic(topicId) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<any>('/api/forum/getreview', {topicId}, httpOptions);\n  }\n\n  doQuestion(question, token) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      })\n    };\n    return this.http.post<any>('/api/forum/question', {question}, httpOptions);\n  }\n\n  doAnswer(topicId, answer) {\n    const token = window.localStorage.getItem('adminJwtToken');\n    console.log(token)\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      })\n    };\n    return this.http.post<any>('/api/forum/doanswer', {topicId, answer}, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtService {\n\n  constructor() { }\n\n  getToken(): string {\n    return window.localStorage.jwtToken;\n  }\n  getAdminToken(): string {\n    return window.localStorage.adminJwtToken;\n  }\n  saveAdminToken(token): string {\n    return window.localStorage.adminJwtToken = token;\n  }\n  destroyAdminToken() {\n    window.localStorage.removeItem('adminJwtToken');\n  }\n  saveToken(token: string) {\n    window.localStorage.jwtToken = token;\n  }\n\n  destroyToken() {\n    window.localStorage.removeItem('jwtToken');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {NgProgress, NgProgressRef} from 'ngx-progressbar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgProgressService {\n\n  progressRef: NgProgressRef;\n\n  constructor(\n    public ngProgress: NgProgress\n  ) {\n    this.progressRef = this.ngProgress.ref();\n  }\n\n  ngProgressStart() {\n    this.progressRef.start();\n  }\n  ngProgressComplete() {\n    this.progressRef.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {JwtService} from './jwt.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(\n    private http: HttpClient,\n    private  jwtService: JwtService\n  ) { }\n\n\n  getProfileData(): any {\n      return this.http.get<any>('/api/profile', {headers: new HttpHeaders({\n          'Content-type': 'application/json',\n          Authorization: `Bearer ${this.jwtService.getToken()}`\n        })\n      });\n    }\n  }\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {Error} from '../models/Error';\nimport {AuthService} from '../services/auth.service';\nimport {NgProgressService} from '../services/ng-progress.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n  addressForm = this.fb.group({\n    firstName: [null, Validators.required],\n    secondName: [null, Validators.required],\n    email: [null, [Validators.required, Validators.email]],\n    password: [null, Validators.required],\n    confirm: [null, Validators.required, ]\n  });\n\n  isSubmit = false;\n  error = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private ngProgressService: NgProgressService,\n    private router: Router\n  ) {}\n\n  onSubmit() {\n    this.isSubmit = true;\n    this.error = null;\n    const credentials = {\n      firstName: this.addressForm.get('firstName').value,\n      secondName: this.addressForm.get('secondName').value,\n      email: this.addressForm.get('email').value,\n      password: this.addressForm.get('password').value\n    };\n    this.authService.attemptAuth('signup', credentials)\n      .subscribe(\n        data => this.router.navigateByUrl('/'),\n        err => {\n          this.error = err.message;\n          this.isSubmit = false;\n        }\n      );\n  }\n}\n","<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\">\n  <mat-card class=\"shipping-card\">\n    <mat-card-header>\n      <mat-card-title>Реєстрація</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Ім'я\" formControlName=\"firstName\">\n            <mat-error *ngIf=\"addressForm.controls['firstName'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Прізвище\" formControlName=\"secondName\">\n            <mat-error *ngIf=\"addressForm.controls['secondName'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Email\" formControlName=\"email\">\n            <mat-error *ngIf=\"addressForm.controls['email'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput type=\"password\" placeholder=\"Пароль\"  formControlName=\"password\">\n            <mat-error *ngIf=\"addressForm.controls['password'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput type=\"password\" placeholder=\"Підтвердьте пароль\"  formControlName=\"confirm\">\n            <mat-error *ngIf=\"addressForm.controls['confirm'].hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"error\">\n        <div class=\"col\">\n          <div class=\"mat-error\">\n            {{error}}\n          </div>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"\n      addressForm.controls['confirm'].hasError('required') ||\n      addressForm.controls['email'].hasError('required') ||\n      addressForm.controls['password'].hasError('required') ||\n      isSubmit\"\n      >Зареєструватися</button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url: 'http://80.249.144.231:80/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}